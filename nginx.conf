user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_names_hash_bucket_size 128;

  limit_req_zone $binary_remote_addr zone=ddos:10m rate=1r/s;  # Define a rate limit zone for DDoS protection

  upstream backend {
    zone backend 64k;  # Define a shared memory zone for the upstream servers
    server web:8000;  # Replace with your web server IP or hostname
    #server web:8000;  # Add more servers if needed
  }

  server {
    listen 80;
    server_name localhost;

    return 301 https://$host$request_uri;  # Redirect HTTP requests to HTTPS
  }

  server {
    listen 443 ssl http2;
    server_name localhost;
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    ssl_certificate ./certs/nginx-selfsigned.crt;  # Replace with the path to your SSL/TLS certificate file
    ssl_certificate_key ./certs/nginx-selfsigned.key;  # Replace with the path to your SSL/TLS private key file

    location /basic_status {
      stub_status;
    }
    location / {
      limit_req zone=ddos burst=5;  # Apply rate limiting to the location block
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  include /etc/nginx/conf.d/*.conf;
}
